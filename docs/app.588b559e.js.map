{"version":3,"sources":["../src/app.js"],"names":["countdown","timer","document","getElementById","buttons","querySelectorAll","alarm","querySelector","start","pause","time","volume","startTimer","clearInterval","display","now","then","Date","setInterval","secondsLeft","Math","round","loop","play","seconds","minutes","floor","remainderSeconds","timeLeft","title","textContent","installServiceWorkerAsync","navigator","serviceWorker","register","console","error","forEach","button","addEventListener","parseInt","dataset","window"],"mappings":";AA0EA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MA1EA,IAMIA,EANEC,EAAQC,SAASC,eAAe,SAChCC,EAAUF,SAASG,iBAAiB,aACpCC,EAAQJ,SAASK,cAAc,UAC/BC,EAAQN,SAASK,cAAc,UAC/BE,EAAQP,SAASK,cAAc,UAGjCG,EAAO,KACLC,EAAS,IAEf,SAASC,IACRC,cAAcb,GACdM,EAAMG,QACNK,EAAQJ,GAEFK,IACAC,EADMC,KAAKF,MACS,IAAPL,EAEnBV,EAAYkB,YAAY,WACjBC,IAAAA,EAAcC,KAAKC,OAAOL,EAAOC,KAAKF,OAAS,KAIjDI,GAHJL,EAAQK,GACRT,EAAOS,EAEHA,GAAe,EAOX,OANPN,cAAcb,GAEdM,EAAMK,OAASA,EACfL,EAAMgB,MAAO,EACbhB,EAAMiB,QAEC,GAIN,KAGJ,SAAST,EAAQU,GACVC,IAAAA,EAAUL,KAAKM,MAAMF,EAAU,IAC/BG,EAAmBH,EAAU,GAE7BI,EAAcH,GAAAA,OAAAA,EACnBE,KAAAA,OAAAA,EAAmB,EAAIA,EAAuBA,IAAAA,OAAAA,IAG/CzB,SAAS2B,MAAQD,EACjB3B,EAAM6B,YAAcF,EAGNG,SAAAA,IAyBf,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OAzBA,EAAA,EAAA,mBAAA,KAAA,SAAA,IAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACK,KAAA,kBAAmBC,WADxB,CAAA,EAAA,KAAA,GAAA,MAG+BA,OAH/B,EAAA,KAAA,EAAA,EAAA,KAAA,EAG+BA,UAAUC,cAAcC,SAAS,uCAHhE,KAAA,EAAA,EAAA,KAAA,EAAA,KAAA,GAAA,MAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAKGC,QAAQC,MAAR,sCAAA,OAAA,EAAA,KALH,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,SAyBA,MAAA,KAAA,WAfAhC,EAAQiC,QAAQ,SAAAC,GACfA,OAAAA,EAAOC,iBAAiB,QAAS,WAChC1B,cAAcb,GAEdc,EADAJ,EAAO8B,SAASF,EAAOG,QAAQ/B,WAKjCF,EAAM+B,iBAAiB,QAAS3B,GAEhCH,EAAM8B,iBAAiB,QAAS,WAC/BjC,EAAMG,QACNI,cAAcb,KAGf0C,OAAOH,iBAAiB,mBAAoB,WAC3CzB,EAAQJ,GACRqB","file":"app.588b559e.js","sourceRoot":"..\\public","sourcesContent":["const timer = document.getElementById(\"timer\");\r\nconst buttons = document.querySelectorAll(\".btn.time\");\r\nconst alarm = document.querySelector(\"#alarm\");\r\nconst start = document.querySelector(\".start\");\r\nconst pause = document.querySelector(\".pause\");\r\n\r\nlet countdown;\r\nlet time = 1500;\r\nconst volume = 0.05;\r\n\r\nfunction startTimer() {\r\n\tclearInterval(countdown);\r\n\talarm.pause();\r\n\tdisplay(time);\r\n\r\n\tconst now = Date.now();\r\n\tconst then = now + time * 1000;\r\n\r\n\tcountdown = setInterval(() => {\r\n\t\tconst secondsLeft = Math.round((then - Date.now()) / 1000);\r\n\t\tdisplay(secondsLeft);\r\n\t\ttime = secondsLeft;\r\n\r\n\t\tif (secondsLeft <= 0) {\r\n\t\t\tclearInterval(countdown);\r\n\r\n\t\t\talarm.volume = volume;\r\n\t\t\talarm.loop = true;\r\n\t\t\talarm.play();\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// eslint-disable-next-line no-use-before-define\r\n\t}, 1000);\r\n}\r\n\r\nfunction display(seconds) {\r\n\tconst minutes = Math.floor(seconds / 60);\r\n\tconst remainderSeconds = seconds % 60;\r\n\r\n\tconst timeLeft = `${minutes}:${\r\n\t\tremainderSeconds > 9 ? remainderSeconds : `0${remainderSeconds}`\r\n\t}`;\r\n\r\n\tdocument.title = timeLeft;\r\n\ttimer.textContent = timeLeft;\r\n}\r\n\r\nasync function installServiceWorkerAsync() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\ttry {\r\n\t\t\tconst serviceWorker = await navigator.serviceWorker.register(\"./sw.js\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(`Failed to register service worker: ${error}`);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nbuttons.forEach(button =>\r\n\tbutton.addEventListener(\"click\", () => {\r\n\t\tclearInterval(countdown);\r\n\t\ttime = parseInt(button.dataset.time);\r\n\t\tdisplay(time);\r\n\t})\r\n);\r\n\r\nstart.addEventListener(\"click\", startTimer);\r\n\r\npause.addEventListener(\"click\", () => {\r\n\talarm.pause();\r\n\tclearInterval(countdown);\r\n});\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n\tdisplay(time);\r\n\tinstallServiceWorkerAsync();\r\n});\r\n"]}